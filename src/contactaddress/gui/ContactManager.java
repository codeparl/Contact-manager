/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package contactaddress.gui;

import java.beans.XMLDecoder;
import java.beans.XMLEncoder;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;

import javax.swing.JFileChooser;

import contactaddress.Application;
import contactaddress.gui.messages.Message;
import contactaddress.models.AddressBook;
import contactaddress.sql.SqlManager;

/**
 *
 * @author hassan
 */
public class ContactManager extends javax.swing.JDialog {

    private JFileChooser fileChooser;
    private SqlManager  sqlManager;
    private XMLEncoder  encoder;
    private XMLDecoder  decoder;
    private Application parent;
    /**
     * Creates new form ContactManager
     */
    public ContactManager(java.awt.Frame parent, boolean modal, SqlManager sqlM) {
        super(parent, modal);
        initComponents();
        this.parent = (Application) parent;
        
        sqlManager  =  sqlM;
        setLocationRelativeTo(this);
        fileChooser =  new JFileChooser(System.getProperty("user.home"));
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        filePath = new javax.swing.JTextField();
        browseFile = new javax.swing.JButton();
        importBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        selectedFileOnly = new javax.swing.JRadioButton();
        allContacts = new javax.swing.JRadioButton();
        exportBtn = new javax.swing.JButton();
        fileSavedTo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Contact Manager");
        setModal(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Import Contact (only xml file)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel1.setText("File Path");

        filePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filePathActionPerformed(evt);
            }
        });

        browseFile.setText("Browse File...");
        browseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFileActionPerformed(evt);
            }
        });

        importBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        importBtn.setText("Import Contact(s)");
        importBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(importBtn)
                .addContainerGap(229, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filePath)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(browseFile)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filePath, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(browseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(importBtn)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Export Contact(s)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        buttonGroup1.add(selectedFileOnly);
        selectedFileOnly.setText("Only the selected contact");

        buttonGroup1.add(allContacts);
        allContacts.setText("All contacts ");

        exportBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        exportBtn.setText("Export contacts as XML file");
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(selectedFileOnly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(allContacts)
                .addGap(104, 104, 104))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exportBtn)
                .addGap(127, 127, 127))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectedFileOnly, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(allContacts, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(exportBtn)
                .addContainerGap())
        );

        fileSavedTo.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        fileSavedTo.setForeground(new java.awt.Color(0, 102, 204));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fileSavedTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileSavedTo, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filePathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filePathActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
        
     int option =    fileChooser.showSaveDialog(this);
     
     if(option == JFileChooser.APPROVE_OPTION){
         //save the contacts 

         File file =  fileChooser.getSelectedFile();

         //make sure you export xml file with its extension
         if(!file.toString().endsWith(".xml"))
           file =  new File(file.toString()+".xml");
           ArrayList<AddressBook> contacts =  new ArrayList<>();
         try {
            
               encoder = new XMLEncoder(new FileOutputStream(file));
               //check user option for exporting the contacts
               if(allContacts.isSelected()){
                
                contacts.addAll(sqlManager.getAllAddress(sqlManager
                 .getSqlStatement().get("address list")));
                 
                   
               }else{
                
                if(parent.currentContact == null)
                   return;
                
                   contacts.clear();
                   contacts.add(parent.currentContact);
               }

               encoder.writeObject(contacts);
              fileSavedTo.setText("Contacts exported to "+file);
        } catch (FileNotFoundException e) {
            Message.showError(e.getMessage(), "File Error");
        }

         
        if(encoder != null)
        encoder.close();

        
         
     }

        
        
    }//GEN-LAST:event_exportBtnActionPerformed

    private void browseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFileActionPerformed
         int option =    fileChooser.showOpenDialog(this);
     
     if(option == JFileChooser.APPROVE_OPTION){
         File file =  fileChooser.getSelectedFile();
         filePath.setText(file.getAbsolutePath());
         
     }
        
    }//GEN-LAST:event_browseFileActionPerformed

    private void importBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importBtnActionPerformed
     
        File file  =  new File(filePath.getText());

    try {
        decoder =  new XMLDecoder(new FileInputStream(file));

        ArrayList<AddressBook>  contacts =(ArrayList<AddressBook>)
          decoder.readObject();

          contacts.forEach((c)->{
            String  sql  =  sqlManager.getSqlStatement().get("insert address");
            sqlManager.insertAddress(sql, c, -1);
          });
          parent.refreshContactList();

    } catch (FileNotFoundException e) {
        Message.showError(e.getMessage(), "File Error");
    }

    if(decoder != null)
    decoder.close(); 

    }//GEN-LAST:event_importBtnActionPerformed

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton allContacts;
    private javax.swing.JButton browseFile;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton exportBtn;
    private javax.swing.JTextField filePath;
    private javax.swing.JLabel fileSavedTo;
    private javax.swing.JButton importBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton selectedFileOnly;
    // End of variables declaration//GEN-END:variables
}
